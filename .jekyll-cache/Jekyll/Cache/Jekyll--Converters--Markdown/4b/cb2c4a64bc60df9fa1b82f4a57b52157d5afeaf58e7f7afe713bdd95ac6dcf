I"ެ<p>在java中进行SQL拼接是一件无比痛苦的工作，这是由于需要通过判断参数动态生成SQL</p>

<p>而且拼接时产生满屏幕的加号或者append，使SQL几乎失去了可读性，那么丢失<code class="highlighter-rouge">WHERE</code>，<code class="highlighter-rouge">AND</code>，逗号等语法错误将随之而来</p>

<p>最近研究mybatis时发现了一个非常好用的工具类 SQL Builder <sup id="fnref:sqlBuilder"><a href="#fn:sqlBuilder" class="footnote">1</a></sup></p>

<h2 id="示例">示例</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="nd">@Test</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">test</span><span class="o">(){</span>
        <span class="nc">String</span> <span class="n">sql</span> <span class="o">=</span> <span class="k">new</span> <span class="no">SQL</span><span class="o">(){</span> <span class="o">{</span>
            <span class="no">SELECT</span><span class="o">(</span><span class="s">"name"</span><span class="o">);</span>
            <span class="no">SELECT</span><span class="o">(</span><span class="s">"password"</span><span class="o">);</span>
            <span class="no">SELECT</span><span class="o">(</span><span class="s">"sex"</span><span class="o">);</span>
            <span class="no">FROM</span><span class="o">(</span><span class="s">"student s"</span><span class="o">);</span>
            <span class="no">INNER_JOIN</span><span class="o">(</span><span class="s">"info i on s.id = i.id"</span><span class="o">);</span>
            <span class="no">WHERE</span><span class="o">(</span><span class="nc">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">"name = '%s'"</span><span class="o">,</span><span class="s">"HanMeiMei"</span><span class="o">));</span>
        <span class="o">}</span> <span class="o">}.</span><span class="na">toString</span><span class="o">();</span>

        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">sql</span><span class="o">);</span>
    <span class="o">}</span>
</code></pre></div></div>

<p>运行结果为：</p>

<p>SELECT name, password, sex</p>

<p>FROM student s</p>

<p>INNER JOIN info i on s.id = i.id</p>

<p>WHERE (name = ‘HanMeiMei’ AND i.sex = 1)</p>

<p>SQL的拼接词都自动生成了</p>

<h2 id="源码">源码</h2>

<p>事实上不必为了使用这个类而引入Mybatis，SQL Builder非常简单，简单到没有使用任何第三方类库，只需将这个类复制粘贴一下就可以直接用了。</p>

<p>SQL Builder 全部代码</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">abstract</span> <span class="kd">class</span> <span class="nc">AbstractSQL</span><span class="o">&lt;</span><span class="no">T</span><span class="o">&gt;</span> <span class="o">{</span>

  <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">String</span> <span class="no">AND</span> <span class="o">=</span> <span class="s">") \nAND ("</span><span class="o">;</span>
  <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">String</span> <span class="no">OR</span> <span class="o">=</span> <span class="s">") \nOR ("</span><span class="o">;</span>

  <span class="kd">public</span> <span class="kd">abstract</span> <span class="no">T</span> <span class="nf">getSelf</span><span class="o">();</span>

  <span class="kd">public</span> <span class="no">T</span> <span class="nf">UPDATE</span><span class="o">(</span><span class="nc">String</span> <span class="n">table</span><span class="o">)</span> <span class="o">{</span>
    <span class="n">sql</span><span class="o">().</span><span class="na">statementType</span> <span class="o">=</span> <span class="nc">SQLStatement</span><span class="o">.</span><span class="na">StatementType</span><span class="o">.</span><span class="na">UPDATE</span><span class="o">;</span>
    <span class="n">sql</span><span class="o">().</span><span class="na">tables</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">table</span><span class="o">);</span>
    <span class="k">return</span> <span class="nf">getSelf</span><span class="o">();</span>
  <span class="o">}</span>

  <span class="kd">public</span> <span class="no">T</span> <span class="nf">SET</span><span class="o">(</span><span class="nc">String</span> <span class="n">sets</span><span class="o">)</span> <span class="o">{</span>
    <span class="n">sql</span><span class="o">().</span><span class="na">sets</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">sets</span><span class="o">);</span>
    <span class="k">return</span> <span class="nf">getSelf</span><span class="o">();</span>
  <span class="o">}</span>

  <span class="kd">public</span> <span class="no">T</span> <span class="nf">INSERT_INTO</span><span class="o">(</span><span class="nc">String</span> <span class="n">tableName</span><span class="o">)</span> <span class="o">{</span>
    <span class="n">sql</span><span class="o">().</span><span class="na">statementType</span> <span class="o">=</span> <span class="nc">SQLStatement</span><span class="o">.</span><span class="na">StatementType</span><span class="o">.</span><span class="na">INSERT</span><span class="o">;</span>
    <span class="n">sql</span><span class="o">().</span><span class="na">tables</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">tableName</span><span class="o">);</span>
    <span class="k">return</span> <span class="nf">getSelf</span><span class="o">();</span>
  <span class="o">}</span>

  <span class="kd">public</span> <span class="no">T</span> <span class="nf">VALUES</span><span class="o">(</span><span class="nc">String</span> <span class="n">columns</span><span class="o">,</span> <span class="nc">String</span> <span class="n">values</span><span class="o">)</span> <span class="o">{</span>
    <span class="n">sql</span><span class="o">().</span><span class="na">columns</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">columns</span><span class="o">);</span>
    <span class="n">sql</span><span class="o">().</span><span class="na">values</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">values</span><span class="o">);</span>
    <span class="k">return</span> <span class="nf">getSelf</span><span class="o">();</span>
  <span class="o">}</span>

  <span class="kd">public</span> <span class="no">T</span> <span class="nf">SELECT</span><span class="o">(</span><span class="nc">String</span> <span class="n">columns</span><span class="o">)</span> <span class="o">{</span>
    <span class="n">sql</span><span class="o">().</span><span class="na">statementType</span> <span class="o">=</span> <span class="nc">SQLStatement</span><span class="o">.</span><span class="na">StatementType</span><span class="o">.</span><span class="na">SELECT</span><span class="o">;</span>
    <span class="n">sql</span><span class="o">().</span><span class="na">select</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">columns</span><span class="o">);</span>
    <span class="k">return</span> <span class="nf">getSelf</span><span class="o">();</span>
  <span class="o">}</span>

  <span class="kd">public</span> <span class="no">T</span> <span class="nf">SELECT_DISTINCT</span><span class="o">(</span><span class="nc">String</span> <span class="n">columns</span><span class="o">)</span> <span class="o">{</span>
    <span class="n">sql</span><span class="o">().</span><span class="na">distinct</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
    <span class="no">SELECT</span><span class="o">(</span><span class="n">columns</span><span class="o">);</span>
    <span class="k">return</span> <span class="nf">getSelf</span><span class="o">();</span>
  <span class="o">}</span>

  <span class="kd">public</span> <span class="no">T</span> <span class="nf">DELETE_FROM</span><span class="o">(</span><span class="nc">String</span> <span class="n">table</span><span class="o">)</span> <span class="o">{</span>
    <span class="n">sql</span><span class="o">().</span><span class="na">statementType</span> <span class="o">=</span> <span class="nc">SQLStatement</span><span class="o">.</span><span class="na">StatementType</span><span class="o">.</span><span class="na">DELETE</span><span class="o">;</span>
    <span class="n">sql</span><span class="o">().</span><span class="na">tables</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">table</span><span class="o">);</span>
    <span class="k">return</span> <span class="nf">getSelf</span><span class="o">();</span>
  <span class="o">}</span>

  <span class="kd">public</span> <span class="no">T</span> <span class="nf">FROM</span><span class="o">(</span><span class="nc">String</span> <span class="n">table</span><span class="o">)</span> <span class="o">{</span>
    <span class="n">sql</span><span class="o">().</span><span class="na">tables</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">table</span><span class="o">);</span>
    <span class="k">return</span> <span class="nf">getSelf</span><span class="o">();</span>
  <span class="o">}</span>

  <span class="kd">public</span> <span class="no">T</span> <span class="nf">JOIN</span><span class="o">(</span><span class="nc">String</span> <span class="n">join</span><span class="o">)</span> <span class="o">{</span>
    <span class="n">sql</span><span class="o">().</span><span class="na">join</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">join</span><span class="o">);</span>
    <span class="k">return</span> <span class="nf">getSelf</span><span class="o">();</span>
  <span class="o">}</span>

  <span class="kd">public</span> <span class="no">T</span> <span class="nf">INNER_JOIN</span><span class="o">(</span><span class="nc">String</span> <span class="n">join</span><span class="o">)</span> <span class="o">{</span>
    <span class="n">sql</span><span class="o">().</span><span class="na">innerJoin</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">join</span><span class="o">);</span>
    <span class="k">return</span> <span class="nf">getSelf</span><span class="o">();</span>
  <span class="o">}</span>

  <span class="kd">public</span> <span class="no">T</span> <span class="nf">LEFT_OUTER_JOIN</span><span class="o">(</span><span class="nc">String</span> <span class="n">join</span><span class="o">)</span> <span class="o">{</span>
    <span class="n">sql</span><span class="o">().</span><span class="na">leftOuterJoin</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">join</span><span class="o">);</span>
    <span class="k">return</span> <span class="nf">getSelf</span><span class="o">();</span>
  <span class="o">}</span>

  <span class="kd">public</span> <span class="no">T</span> <span class="nf">RIGHT_OUTER_JOIN</span><span class="o">(</span><span class="nc">String</span> <span class="n">join</span><span class="o">)</span> <span class="o">{</span>
    <span class="n">sql</span><span class="o">().</span><span class="na">rightOuterJoin</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">join</span><span class="o">);</span>
    <span class="k">return</span> <span class="nf">getSelf</span><span class="o">();</span>
  <span class="o">}</span>

  <span class="kd">public</span> <span class="no">T</span> <span class="nf">OUTER_JOIN</span><span class="o">(</span><span class="nc">String</span> <span class="n">join</span><span class="o">)</span> <span class="o">{</span>
    <span class="n">sql</span><span class="o">().</span><span class="na">outerJoin</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">join</span><span class="o">);</span>
    <span class="k">return</span> <span class="nf">getSelf</span><span class="o">();</span>
  <span class="o">}</span>

  <span class="kd">public</span> <span class="no">T</span> <span class="nf">WHERE</span><span class="o">(</span><span class="nc">String</span> <span class="n">conditions</span><span class="o">)</span> <span class="o">{</span>
    <span class="n">sql</span><span class="o">().</span><span class="na">where</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">conditions</span><span class="o">);</span>
    <span class="n">sql</span><span class="o">().</span><span class="na">lastList</span> <span class="o">=</span> <span class="n">sql</span><span class="o">().</span><span class="na">where</span><span class="o">;</span>
    <span class="k">return</span> <span class="nf">getSelf</span><span class="o">();</span>
  <span class="o">}</span>

  <span class="kd">public</span> <span class="no">T</span> <span class="nf">OR</span><span class="o">()</span> <span class="o">{</span>
    <span class="n">sql</span><span class="o">().</span><span class="na">lastList</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="no">OR</span><span class="o">);</span>
    <span class="k">return</span> <span class="nf">getSelf</span><span class="o">();</span>
  <span class="o">}</span>

  <span class="kd">public</span> <span class="no">T</span> <span class="nf">AND</span><span class="o">()</span> <span class="o">{</span>
    <span class="n">sql</span><span class="o">().</span><span class="na">lastList</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="no">AND</span><span class="o">);</span>
    <span class="k">return</span> <span class="nf">getSelf</span><span class="o">();</span>
  <span class="o">}</span>

  <span class="kd">public</span> <span class="no">T</span> <span class="nf">GROUP_BY</span><span class="o">(</span><span class="nc">String</span> <span class="n">columns</span><span class="o">)</span> <span class="o">{</span>
    <span class="n">sql</span><span class="o">().</span><span class="na">groupBy</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">columns</span><span class="o">);</span>
    <span class="k">return</span> <span class="nf">getSelf</span><span class="o">();</span>
  <span class="o">}</span>

  <span class="kd">public</span> <span class="no">T</span> <span class="nf">HAVING</span><span class="o">(</span><span class="nc">String</span> <span class="n">conditions</span><span class="o">)</span> <span class="o">{</span>
    <span class="n">sql</span><span class="o">().</span><span class="na">having</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">conditions</span><span class="o">);</span>
    <span class="n">sql</span><span class="o">().</span><span class="na">lastList</span> <span class="o">=</span> <span class="n">sql</span><span class="o">().</span><span class="na">having</span><span class="o">;</span>
    <span class="k">return</span> <span class="nf">getSelf</span><span class="o">();</span>
  <span class="o">}</span>

  <span class="kd">public</span> <span class="no">T</span> <span class="nf">ORDER_BY</span><span class="o">(</span><span class="nc">String</span> <span class="n">columns</span><span class="o">)</span> <span class="o">{</span>
    <span class="n">sql</span><span class="o">().</span><span class="na">orderBy</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">columns</span><span class="o">);</span>
    <span class="k">return</span> <span class="nf">getSelf</span><span class="o">();</span>
  <span class="o">}</span>

  <span class="kd">private</span> <span class="nc">SQLStatement</span> <span class="n">sql</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">SQLStatement</span><span class="o">();</span>

  <span class="kd">private</span> <span class="nc">SQLStatement</span> <span class="nf">sql</span><span class="o">()</span> <span class="o">{</span>
    <span class="k">return</span> <span class="n">sql</span><span class="o">;</span>
  <span class="o">}</span>

  <span class="kd">public</span> <span class="o">&lt;</span><span class="no">A</span> <span class="kd">extends</span> <span class="nc">Appendable</span><span class="o">&gt;</span> <span class="no">A</span> <span class="nf">usingAppender</span><span class="o">(</span><span class="no">A</span> <span class="n">a</span><span class="o">)</span> <span class="o">{</span>
    <span class="n">sql</span><span class="o">().</span><span class="na">sql</span><span class="o">(</span><span class="n">a</span><span class="o">);</span>
    <span class="k">return</span> <span class="n">a</span><span class="o">;</span>
  <span class="o">}</span>

  <span class="nd">@Override</span>
  <span class="kd">public</span> <span class="nc">String</span> <span class="nf">toString</span><span class="o">()</span> <span class="o">{</span>
    <span class="nc">StringBuilder</span> <span class="n">sb</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringBuilder</span><span class="o">();</span>
    <span class="n">sql</span><span class="o">().</span><span class="na">sql</span><span class="o">(</span><span class="n">sb</span><span class="o">);</span>
    <span class="k">return</span> <span class="n">sb</span><span class="o">.</span><span class="na">toString</span><span class="o">();</span>
  <span class="o">}</span>

  <span class="kd">private</span> <span class="kd">static</span> <span class="kd">class</span> <span class="nc">SafeAppendable</span> <span class="o">{</span>
    <span class="kd">private</span> <span class="kd">final</span> <span class="nc">Appendable</span> <span class="n">a</span><span class="o">;</span>
    <span class="kd">private</span> <span class="kt">boolean</span> <span class="n">empty</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>

    <span class="kd">public</span> <span class="nf">SafeAppendable</span><span class="o">(</span><span class="nc">Appendable</span> <span class="n">a</span><span class="o">)</span> <span class="o">{</span>
      <span class="kd">super</span><span class="o">();</span>
      <span class="k">this</span><span class="o">.</span><span class="na">a</span> <span class="o">=</span> <span class="n">a</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="nc">SafeAppendable</span> <span class="nf">append</span><span class="o">(</span><span class="nc">CharSequence</span> <span class="n">s</span><span class="o">)</span> <span class="o">{</span>
      <span class="k">try</span> <span class="o">{</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">empty</span> <span class="o">&amp;&amp;</span> <span class="n">s</span><span class="o">.</span><span class="na">length</span><span class="o">()</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="o">)</span> <span class="n">empty</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
        <span class="n">a</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">s</span><span class="o">);</span>
      <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">throw</span> <span class="k">new</span> <span class="nf">RuntimeException</span><span class="o">(</span><span class="n">e</span><span class="o">);</span>
      <span class="o">}</span>
      <span class="k">return</span> <span class="k">this</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">isEmpty</span><span class="o">()</span> <span class="o">{</span>
      <span class="k">return</span> <span class="n">empty</span><span class="o">;</span>
    <span class="o">}</span>

  <span class="o">}</span>

  <span class="kd">private</span> <span class="kd">static</span> <span class="kd">class</span> <span class="nc">SQLStatement</span> <span class="o">{</span>

    <span class="kd">public</span> <span class="kd">enum</span> <span class="nc">StatementType</span> <span class="o">{</span>
      <span class="no">DELETE</span><span class="o">,</span> <span class="no">INSERT</span><span class="o">,</span> <span class="no">SELECT</span><span class="o">,</span> <span class="no">UPDATE</span>
    <span class="o">}</span>

    <span class="nc">StatementType</span> <span class="n">statementType</span><span class="o">;</span>
    <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">sets</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;();</span>
    <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">select</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;();</span>
    <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">tables</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;();</span>
    <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">join</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;();</span>
    <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">innerJoin</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;();</span>
    <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">outerJoin</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;();</span>
    <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">leftOuterJoin</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;();</span>
    <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">rightOuterJoin</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;();</span>
    <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">where</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;();</span>
    <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">having</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;();</span>
    <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">groupBy</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;();</span>
    <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">orderBy</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;();</span>
    <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">lastList</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;();</span>
    <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">columns</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;();</span>
    <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">values</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;();</span>
    <span class="kt">boolean</span> <span class="n">distinct</span><span class="o">;</span>

    <span class="kd">private</span> <span class="kt">void</span> <span class="nf">sqlClause</span><span class="o">(</span><span class="nc">SafeAppendable</span> <span class="n">builder</span><span class="o">,</span> <span class="nc">String</span> <span class="n">keyword</span><span class="o">,</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">parts</span><span class="o">,</span> <span class="nc">String</span> <span class="n">open</span><span class="o">,</span> <span class="nc">String</span> <span class="n">close</span><span class="o">,</span>
                           <span class="nc">String</span> <span class="n">conjunction</span><span class="o">)</span> <span class="o">{</span>
      <span class="k">if</span> <span class="o">(!</span><span class="n">parts</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">())</span> <span class="o">{</span>
        <span class="k">if</span> <span class="o">(!</span><span class="n">builder</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">())</span>
          <span class="n">builder</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">"\n"</span><span class="o">);</span>
        <span class="n">builder</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">keyword</span><span class="o">);</span>
        <span class="n">builder</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">" "</span><span class="o">);</span>
        <span class="n">builder</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">open</span><span class="o">);</span>
        <span class="nc">String</span> <span class="n">last</span> <span class="o">=</span> <span class="s">"________"</span><span class="o">;</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">,</span> <span class="n">n</span> <span class="o">=</span> <span class="n">parts</span><span class="o">.</span><span class="na">size</span><span class="o">();</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">n</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
          <span class="nc">String</span> <span class="n">part</span> <span class="o">=</span> <span class="n">parts</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
          <span class="k">if</span> <span class="o">(</span><span class="n">i</span> <span class="o">&gt;</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="n">part</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="no">AND</span><span class="o">)</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="n">part</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="no">OR</span><span class="o">)</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="n">last</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="no">AND</span><span class="o">)</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="n">last</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="no">OR</span><span class="o">))</span> <span class="o">{</span>
            <span class="n">builder</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">conjunction</span><span class="o">);</span>
          <span class="o">}</span>
          <span class="n">builder</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">part</span><span class="o">);</span>
          <span class="n">last</span> <span class="o">=</span> <span class="n">part</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="n">builder</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">close</span><span class="o">);</span>
      <span class="o">}</span>
    <span class="o">}</span>

    <span class="kd">private</span> <span class="nc">String</span> <span class="nf">selectSQL</span><span class="o">(</span><span class="nc">SafeAppendable</span> <span class="n">builder</span><span class="o">)</span> <span class="o">{</span>
      <span class="k">if</span> <span class="o">(</span><span class="n">distinct</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">sqlClause</span><span class="o">(</span><span class="n">builder</span><span class="o">,</span> <span class="s">"SELECT DISTINCT"</span><span class="o">,</span> <span class="n">select</span><span class="o">,</span> <span class="s">""</span><span class="o">,</span> <span class="s">""</span><span class="o">,</span> <span class="s">", "</span><span class="o">);</span>
      <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
        <span class="n">sqlClause</span><span class="o">(</span><span class="n">builder</span><span class="o">,</span> <span class="s">"SELECT"</span><span class="o">,</span> <span class="n">select</span><span class="o">,</span> <span class="s">""</span><span class="o">,</span> <span class="s">""</span><span class="o">,</span> <span class="s">", "</span><span class="o">);</span>
      <span class="o">}</span>

      <span class="n">sqlClause</span><span class="o">(</span><span class="n">builder</span><span class="o">,</span> <span class="s">"FROM"</span><span class="o">,</span> <span class="n">tables</span><span class="o">,</span> <span class="s">""</span><span class="o">,</span> <span class="s">""</span><span class="o">,</span> <span class="s">", "</span><span class="o">);</span>
      <span class="n">sqlClause</span><span class="o">(</span><span class="n">builder</span><span class="o">,</span> <span class="s">"JOIN"</span><span class="o">,</span> <span class="n">join</span><span class="o">,</span> <span class="s">""</span><span class="o">,</span> <span class="s">""</span><span class="o">,</span> <span class="s">"\nJOIN "</span><span class="o">);</span>
      <span class="n">sqlClause</span><span class="o">(</span><span class="n">builder</span><span class="o">,</span> <span class="s">"INNER JOIN"</span><span class="o">,</span> <span class="n">innerJoin</span><span class="o">,</span> <span class="s">""</span><span class="o">,</span> <span class="s">""</span><span class="o">,</span> <span class="s">"\nINNER JOIN "</span><span class="o">);</span>
      <span class="n">sqlClause</span><span class="o">(</span><span class="n">builder</span><span class="o">,</span> <span class="s">"OUTER JOIN"</span><span class="o">,</span> <span class="n">outerJoin</span><span class="o">,</span> <span class="s">""</span><span class="o">,</span> <span class="s">""</span><span class="o">,</span> <span class="s">"\nOUTER JOIN "</span><span class="o">);</span>
      <span class="n">sqlClause</span><span class="o">(</span><span class="n">builder</span><span class="o">,</span> <span class="s">"LEFT OUTER JOIN"</span><span class="o">,</span> <span class="n">leftOuterJoin</span><span class="o">,</span> <span class="s">""</span><span class="o">,</span> <span class="s">""</span><span class="o">,</span> <span class="s">"\nLEFT OUTER JOIN "</span><span class="o">);</span>
      <span class="n">sqlClause</span><span class="o">(</span><span class="n">builder</span><span class="o">,</span> <span class="s">"RIGHT OUTER JOIN"</span><span class="o">,</span> <span class="n">rightOuterJoin</span><span class="o">,</span> <span class="s">""</span><span class="o">,</span> <span class="s">""</span><span class="o">,</span> <span class="s">"\nRIGHT OUTER JOIN "</span><span class="o">);</span>
      <span class="n">sqlClause</span><span class="o">(</span><span class="n">builder</span><span class="o">,</span> <span class="s">"WHERE"</span><span class="o">,</span> <span class="n">where</span><span class="o">,</span> <span class="s">"("</span><span class="o">,</span> <span class="s">")"</span><span class="o">,</span> <span class="s">" AND "</span><span class="o">);</span>
      <span class="n">sqlClause</span><span class="o">(</span><span class="n">builder</span><span class="o">,</span> <span class="s">"GROUP BY"</span><span class="o">,</span> <span class="n">groupBy</span><span class="o">,</span> <span class="s">""</span><span class="o">,</span> <span class="s">""</span><span class="o">,</span> <span class="s">", "</span><span class="o">);</span>
      <span class="n">sqlClause</span><span class="o">(</span><span class="n">builder</span><span class="o">,</span> <span class="s">"HAVING"</span><span class="o">,</span> <span class="n">having</span><span class="o">,</span> <span class="s">"("</span><span class="o">,</span> <span class="s">")"</span><span class="o">,</span> <span class="s">" AND "</span><span class="o">);</span>
      <span class="n">sqlClause</span><span class="o">(</span><span class="n">builder</span><span class="o">,</span> <span class="s">"ORDER BY"</span><span class="o">,</span> <span class="n">orderBy</span><span class="o">,</span> <span class="s">""</span><span class="o">,</span> <span class="s">""</span><span class="o">,</span> <span class="s">", "</span><span class="o">);</span>
      <span class="k">return</span> <span class="n">builder</span><span class="o">.</span><span class="na">toString</span><span class="o">();</span>
    <span class="o">}</span>

    <span class="kd">private</span> <span class="nc">String</span> <span class="nf">insertSQL</span><span class="o">(</span><span class="nc">SafeAppendable</span> <span class="n">builder</span><span class="o">)</span> <span class="o">{</span>
      <span class="n">sqlClause</span><span class="o">(</span><span class="n">builder</span><span class="o">,</span> <span class="s">"INSERT INTO"</span><span class="o">,</span> <span class="n">tables</span><span class="o">,</span> <span class="s">""</span><span class="o">,</span> <span class="s">""</span><span class="o">,</span> <span class="s">""</span><span class="o">);</span>
      <span class="n">sqlClause</span><span class="o">(</span><span class="n">builder</span><span class="o">,</span> <span class="s">""</span><span class="o">,</span> <span class="n">columns</span><span class="o">,</span> <span class="s">"("</span><span class="o">,</span> <span class="s">")"</span><span class="o">,</span> <span class="s">", "</span><span class="o">);</span>
      <span class="n">sqlClause</span><span class="o">(</span><span class="n">builder</span><span class="o">,</span> <span class="s">"VALUES"</span><span class="o">,</span> <span class="n">values</span><span class="o">,</span> <span class="s">"("</span><span class="o">,</span> <span class="s">")"</span><span class="o">,</span> <span class="s">", "</span><span class="o">);</span>
      <span class="k">return</span> <span class="n">builder</span><span class="o">.</span><span class="na">toString</span><span class="o">();</span>
    <span class="o">}</span>

    <span class="kd">private</span> <span class="nc">String</span> <span class="nf">deleteSQL</span><span class="o">(</span><span class="nc">SafeAppendable</span> <span class="n">builder</span><span class="o">)</span> <span class="o">{</span>
      <span class="n">sqlClause</span><span class="o">(</span><span class="n">builder</span><span class="o">,</span> <span class="s">"DELETE FROM"</span><span class="o">,</span> <span class="n">tables</span><span class="o">,</span> <span class="s">""</span><span class="o">,</span> <span class="s">""</span><span class="o">,</span> <span class="s">""</span><span class="o">);</span>
      <span class="n">sqlClause</span><span class="o">(</span><span class="n">builder</span><span class="o">,</span> <span class="s">"WHERE"</span><span class="o">,</span> <span class="n">where</span><span class="o">,</span> <span class="s">"("</span><span class="o">,</span> <span class="s">")"</span><span class="o">,</span> <span class="s">" AND "</span><span class="o">);</span>
      <span class="k">return</span> <span class="n">builder</span><span class="o">.</span><span class="na">toString</span><span class="o">();</span>
    <span class="o">}</span>

    <span class="kd">private</span> <span class="nc">String</span> <span class="nf">updateSQL</span><span class="o">(</span><span class="nc">SafeAppendable</span> <span class="n">builder</span><span class="o">)</span> <span class="o">{</span>

      <span class="n">sqlClause</span><span class="o">(</span><span class="n">builder</span><span class="o">,</span> <span class="s">"UPDATE"</span><span class="o">,</span> <span class="n">tables</span><span class="o">,</span> <span class="s">""</span><span class="o">,</span> <span class="s">""</span><span class="o">,</span> <span class="s">""</span><span class="o">);</span>
      <span class="n">sqlClause</span><span class="o">(</span><span class="n">builder</span><span class="o">,</span> <span class="s">"SET"</span><span class="o">,</span> <span class="n">sets</span><span class="o">,</span> <span class="s">""</span><span class="o">,</span> <span class="s">""</span><span class="o">,</span> <span class="s">", "</span><span class="o">);</span>
      <span class="n">sqlClause</span><span class="o">(</span><span class="n">builder</span><span class="o">,</span> <span class="s">"WHERE"</span><span class="o">,</span> <span class="n">where</span><span class="o">,</span> <span class="s">"("</span><span class="o">,</span> <span class="s">")"</span><span class="o">,</span> <span class="s">" AND "</span><span class="o">);</span>
      <span class="k">return</span> <span class="n">builder</span><span class="o">.</span><span class="na">toString</span><span class="o">();</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="nc">String</span> <span class="nf">sql</span><span class="o">(</span><span class="nc">Appendable</span> <span class="n">a</span><span class="o">)</span> <span class="o">{</span>
      <span class="nc">SafeAppendable</span> <span class="n">builder</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">SafeAppendable</span><span class="o">(</span><span class="n">a</span><span class="o">);</span>
      <span class="k">if</span> <span class="o">(</span><span class="n">statementType</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
      <span class="o">}</span>

      <span class="nc">String</span> <span class="n">answer</span><span class="o">;</span>

      <span class="k">switch</span> <span class="o">(</span><span class="n">statementType</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">case</span> <span class="nl">DELETE:</span>
          <span class="n">answer</span> <span class="o">=</span> <span class="n">deleteSQL</span><span class="o">(</span><span class="n">builder</span><span class="o">);</span>
          <span class="k">break</span><span class="o">;</span>

        <span class="k">case</span> <span class="nl">INSERT:</span>
          <span class="n">answer</span> <span class="o">=</span> <span class="n">insertSQL</span><span class="o">(</span><span class="n">builder</span><span class="o">);</span>
          <span class="k">break</span><span class="o">;</span>

        <span class="k">case</span> <span class="nl">SELECT:</span>
          <span class="n">answer</span> <span class="o">=</span> <span class="n">selectSQL</span><span class="o">(</span><span class="n">builder</span><span class="o">);</span>
          <span class="k">break</span><span class="o">;</span>

        <span class="k">case</span> <span class="nl">UPDATE:</span>
          <span class="n">answer</span> <span class="o">=</span> <span class="n">updateSQL</span><span class="o">(</span><span class="n">builder</span><span class="o">);</span>
          <span class="k">break</span><span class="o">;</span>

        <span class="k">default</span><span class="o">:</span>
          <span class="n">answer</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
      <span class="o">}</span>

      <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
  <span class="o">}</span>
<span class="o">}</span>


<span class="kd">public</span> <span class="kd">class</span> <span class="nc">SQL</span> <span class="kd">extends</span> <span class="nc">AbstractSQL</span><span class="o">&lt;</span><span class="no">SQL</span><span class="o">&gt;</span> <span class="o">{</span>

  <span class="nd">@Override</span>
  <span class="kd">public</span> <span class="no">SQL</span> <span class="nf">getSelf</span><span class="o">()</span> <span class="o">{</span>
    <span class="k">return</span> <span class="k">this</span><span class="o">;</span>
  <span class="o">}</span>

<span class="o">}</span>
</code></pre></div></div>

<div class="footnotes">
  <ol>
    <li id="fn:sqlBuilder">
      <p><a href="http://mybatis.github.io/mybatis-3/statement-builders.html">http://mybatis.github.io/mybatis-3/statement-builders.html</a> <a href="#fnref:sqlBuilder" class="reversefootnote">&#8617;</a></p>
    </li>
  </ol>
</div>
:ET